{"remainingRequest":"/Users/malte/Desktop/Malte/interview-task/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/malte/Desktop/Malte/interview-task/src/pages/ToDoList.vue?vue&type=style&index=0&id=11d4ccc8&scoped=true&lang=css&","dependencies":[{"path":"/Users/malte/Desktop/Malte/interview-task/src/pages/ToDoList.vue","mtime":1624923814891},{"path":"/Users/malte/Desktop/Malte/interview-task/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/malte/Desktop/Malte/interview-task/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/malte/Desktop/Malte/interview-task/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/malte/Desktop/Malte/interview-task/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/malte/Desktop/Malte/interview-task/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRvZG8tY29udGFpbmVyIHsKICBtaW4td2lkdGg6IDMwMHB4OwogIG1heC13aWR0aDogMjUlOwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKfQoKYnV0dG9uIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMzYsIDE4OSwgNzApOwogIGNvbG9yOiB3aGl0ZTsKICBmb250LXNpemU6IDE2cHg7CiAgYm9yZGVyLXJhZGl1czogMjBweDsKICBib3JkZXI6IG5vbmU7CiAgcGFkZGluZzogOHB4IDI0cHg7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgoqOmZvY3VzIHsKICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50OwogIG91dGxpbmU6IG5vbmU7Cn0KCmgxIHsKICBmb250LXNpemU6IDI0cHg7CiAgZm9udC13ZWlnaHQ6IDQwMDsKICBjb2xvcjogcmdiKDE2MywgMTYzLCAxNjMpOwp9CgpoMiB7CiAgZm9udC1zaXplOiAxNnB4OwogIGZvbnQtd2VpZ2h0OiA0MDA7CiAgY29sb3I6IHJnYigxNjMsIDE2MywgMTYzKTsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi10b3A6IDMwcHg7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKfQoKaW5wdXQgewogIHdpZHRoOiAxMDAlOwogIHBhZGRpbmc6IDEwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKICBib3JkZXI6IG5vbmU7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKICAtd2Via2l0LWJveC1zaGFkb3c6IDBweCAzcHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMik7CiAgYm94LXNoYWRvdzogMHB4IDNweCA1cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTsKICBvdXRsaW5lOiBub25lOwogIGZvbnQtc2l6ZTogMTZweDsKICBjb2xvcjogcmdiKDAsIDAsIDApOwogIHdpZHRoOiAxMDAlOwogIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogU2FmYXJpL0Nocm9tZSwgb3RoZXIgV2ViS2l0ICovCiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiBGaXJlZm94LCBvdGhlciBHZWNrbyAqLwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KCmlucHV0OjpwbGFjZWhvbGRlciB7CiAgY29sb3I6IHJnYigxNjMsIDE2MywgMTYzKTsKfQo="},{"version":3,"sources":["ToDoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ToDoList.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"todo-container\">\n    <h1>TO-DO List</h1>\n\n    <input\n      id=\"task-input\"\n      type=\"text\"\n      placeholder=\"Write your task here\"\n      v-model=\"userInput\"\n    />\n    <button @click=\"newTask()\">Add task</button>\n\n    <h2>Not finished tasks</h2>\n    <div v-for=\"(task, index) in todoList\" :key=\"index\">\n      <TaskItem\n        v-if=\"task.finished == false\"\n        :taskTitle=\"task.title\"\n        :taskStatus=\"task.finished\"\n        :index=\"index\"\n      />\n    </div>\n\n    <h2>Finished tasks</h2>\n    <div\n      v-for=\"(task, index) in todoList\"\n      :key=\"'finished' + index\"\n      :style=\"{ opacity: '0.5' }\"\n    >\n      <TaskItem\n        v-if=\"task.finished == true\"\n        :taskTitle=\"task.title\"\n        :taskStatus=\"task.finished\"\n        :index=\"index\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport TaskItem from \"../components/TaskItem.vue\";\nexport default {\n  name: \"ToDoList\",\n  components: { TaskItem },\n  data() {\n    return {\n      userInput: \"\",\n    };\n  },\n  computed: {\n    ...mapState([\"todoList\"]),\n  },\n  methods: {\n    newTask() {\n      const task = document.getElementById(\"task-input\");\n      if (this.userInput == \"\") {\n        task.style.backgroundColor = \"rgb(255, 195, 195)\";\n        task.placeholder = \"Write your task here\";\n      } else {\n        task.style.backgroundColor = \"white\";\n        this.$store.commit(\"addTask\", this.userInput);\n        this.userInput = \"\";\n      }\n    },\n  },\n  watch: {\n    userInput: function () {\n      const task = document.getElementById(\"task-input\");\n      task.style.backgroundColor = \"white\";\n    },\n  },\n};\n</script>\n\n<style scoped>\n.todo-container {\n  min-width: 300px;\n  max-width: 25%;\n  margin-left: auto;\n  margin-right: auto;\n}\n\nbutton {\n  background-color: rgb(36, 189, 70);\n  color: white;\n  font-size: 16px;\n  border-radius: 20px;\n  border: none;\n  padding: 8px 24px;\n  cursor: pointer;\n}\n\n*:focus {\n  -webkit-tap-highlight-color: transparent;\n  outline: none;\n}\n\nh1 {\n  font-size: 24px;\n  font-weight: 400;\n  color: rgb(163, 163, 163);\n}\n\nh2 {\n  font-size: 16px;\n  font-weight: 400;\n  color: rgb(163, 163, 163);\n  text-align: left;\n  margin-top: 30px;\n  margin-bottom: 10px;\n}\n\ninput {\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 20px;\n  border: none;\n  border-radius: 10px;\n  -webkit-box-shadow: 0px 3px 5px 0px rgba(0, 0, 0, 0.2);\n  box-shadow: 0px 3px 5px 0px rgba(0, 0, 0, 0.2);\n  outline: none;\n  font-size: 16px;\n  color: rgb(0, 0, 0);\n  width: 100%;\n  -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n  -moz-box-sizing: border-box; /* Firefox, other Gecko */\n  box-sizing: border-box;\n}\n\ninput::placeholder {\n  color: rgb(163, 163, 163);\n}\n</style>"]}]}